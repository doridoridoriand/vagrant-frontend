---

- name: Preparate install .rbenv and ruby-build
  apt: name={{item}} state=present
  with_items:
    - git
    - curl
    - g++
    - make
    - zlib1g-dev
    - libssl-dev
    - libreadline-dev
    - libyaml-dev
    - libxml2-dev
    - libxslt-dev
    - sqlite3
    - libsqlite3-dev
  become: yes

- name: Clone rbenv into local
  git:
    repo:  git://github.com/sstephenson/rbenv.git
    dest: /home/vagrant/.rbenv

- name: change .rbenv folder owner from root to vagrant
  file:
    dest: /home/vagrant/.rbenv
    owner: vagrant
    group: vagrant
    mode: 0755

- name: Clone ruby-build into local
  git:
    repo: git://github.com/sstephenson/ruby-build.git
    dest: /home/vagrant/.rbenv/plugins/ruby-build

- name: change ruby-build folder owner from root to vagrant
  file:
    dest: /home/vagrant/.rbenv/plugins/ruby-build
    owner: vagrant
    group: vagrant
    mode: 0755

- name: Update bashrc to able to load .rbenv and ruby-build
  shell: >
    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> /home/vagrant/.bashrc && echo 'eval "$(rbenv init -)"' >> /home/vagrant/.bashrc && exec $SHEL
  args:
    creates: /var/lib/ansible/updated-bashrc-rbenv-and-ruby-build

- name: check available ruby version
  shell: /home/vagrant/.rbenv/bin/rbenv install --list
  register: available_ruby_versions

- debug: var=available_ruby_versions.stdout_lines

- name: install latest version of ruby
  shell: rbenv install `rbenv install --list | tr -s '\n', ',' | python -c "import re; s = input(); v = re.findall('2.\d.\d', s); v = sorted(list(set(v))); v.pop(-1); v.pop(-1); v.pop(-1); print(v.pop(-1))"`
